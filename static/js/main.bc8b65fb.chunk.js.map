{"version":3,"sources":["Component/Navbar/Navbar.js","Component/Modal/Modal.js","Component/Slider/Slider.js","Component/Block/Block.js","Component/About/About.js","Component/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["navbar","style","marginBottom","className","backgroundImage","backgroundColor","borderColor","type","data-toggle","data-target","href","color","id","modal","class","marginTop","padding","width","role","data-dismiss","slider","styleImage","data-ride","data-slide-to","maxHeight","src","alt","top","data-slide","block","props","display","height","boxShadow","margin","fontSize","justifyContent","alignItems","value","about","textAlign","footer","App","state","blockHeading","selectBlock","this","map","index","console","log","Block","key","Navbar","Modal","Slider","About","paddingTop","Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kQAwCeA,EAtCA,WAYd,OACC,qCAAKC,MAZc,CACnBC,aAAc,KAWWC,UAAU,0CAAnC,QATuB,CACvBC,gBAAiB,OACjBC,gBAAiB,UACjBC,YAAa,YAOZ,yBAAKH,UAAU,mBACd,yBAAKA,UAAU,iBACd,4BAAQI,KAAK,SAASJ,UAAU,gBAAgBK,cAAY,WAAWC,cAAY,aAClF,0BAAMN,UAAU,aAChB,0BAAMA,UAAU,aAChB,0BAAMA,UAAU,cAEjB,uBAAGA,UAAU,eAAeO,KAAK,IAAIT,MAAO,CAAEU,MAAO,YAArD,gBAED,yBAAKR,UAAU,2BAA2BS,GAAG,YAC5C,wBAAIT,UAAU,kBACb,wBAAIA,UAAU,UAAS,uBAAGO,KAAK,QAAQT,MAhB1B,CACjBG,gBAAiB,sDAeU,SACvB,4BAAI,uBAAGM,KAAK,SAAST,MAAO,CAAEU,MAAO,YAAjC,UACJ,4BAAI,uBAAGD,KAAK,SAAST,MAAO,CAAEU,MAAO,YAAjC,WAEL,wBAAIR,UAAU,+BACb,4BAAI,uBAAGO,KAAK,KAAI,0BAAMP,UAAU,6BAA5B,aACJ,4BAAI,uBAAGO,KAAK,KAAI,0BAAMP,UAAU,+BAA5B,gBCHKU,EA5BD,WACb,OACC,yBAAKC,MAAM,kBAAkBb,MAAO,CAAEc,UAAW,OAAQC,QAAS,MAEjE,uBAAGF,MAAM,sBAAsBN,cAAY,QAAQC,cAAY,WAAWR,MAAO,CAAEgB,MAAO,SAA1F,cAEA,yBAAKH,MAAM,aAAaF,GAAG,UAAUM,KAAK,UACzC,yBAAKJ,MAAM,gBAEV,yBAAKA,MAAM,iBACV,yBAAKA,MAAM,gBACV,4BAAQP,KAAK,SAASO,MAAM,QAAQK,eAAa,SAAjD,QACA,wBAAIL,MAAM,eAAV,iBAED,yBAAKA,MAAM,cACV,uDAED,yBAAKA,MAAM,gBACV,4BAAQP,KAAK,SAASO,MAAM,kBAAkBK,eAAa,SAA3D,eC2CQC,EA5DA,WACX,IAGMC,EAAa,CACfJ,MAAO,QAEX,OACI,6BACI,yBAAKd,UAAU,kBAAkBF,MAAO,CAAEe,QAAS,MAC/C,yBAAKJ,GAAG,aAAaT,UAAU,iBAAiBmB,YAAU,YAEtD,wBAAInB,UAAU,uBACV,wBAAIM,cAAY,cAAcc,gBAAc,IAAIpB,UAAU,WAC1D,wBAAIM,cAAY,cAAcc,gBAAc,MAC5C,wBAAId,cAAY,cAAcc,gBAAc,OAGhD,yBAAKpB,UAAU,iBAAiBF,MAjBrB,CACvBuB,UAAW,UAkBK,yBAAKrB,UAAU,eACX,yBAAKsB,IAAI,kBAAkBC,IAAI,cAAczB,MAAOoB,IACpD,yBAAKlB,UAAU,mBAAmBF,MAAO,CAAE0B,IAAK,UAC5C,2CACA,0DAIR,yBAAKxB,UAAU,QACX,yBAAKsB,IAAI,uBAAuBC,IAAI,UAAUzB,MAAOoB,IACrD,yBAAKlB,UAAU,mBAAmBF,MAAO,CAAE0B,IAAK,UAC5C,uCACA,oDAIR,yBAAKxB,UAAU,QACX,yBAAKsB,IAAI,kBAAkBC,IAAI,WAAWzB,MAAOoB,IACjD,yBAAKlB,UAAU,mBAAmBF,MAAO,CAAE0B,IAAK,UAC5C,wCACA,wDAOZ,uBAAGxB,UAAU,wBAAwBO,KAAK,cAAckB,aAAW,QAC/D,0BAAMzB,UAAU,qCAChB,0BAAMA,UAAU,WAAhB,aAEJ,uBAAGA,UAAU,yBAAyBO,KAAK,cAAckB,aAAW,QAChE,0BAAMzB,UAAU,sCAChB,0BAAMA,UAAU,WAAhB,aCpCT0B,EAlBD,SAACC,GAYd,OACC,yBAAK7B,MAZiB,CACtB8B,QAAS,cACTd,MAAO,QACPe,OAAQ,QACRC,UAAW,2BACXC,OAAQ,OACRlB,QAAS,OACTmB,SAAU,OACVC,eAAgB,SAChBC,WAAY,WAIX,2BAAIP,EAAMQ,SC+BEC,EA7CD,WAQb,OACC,yBAAKtC,MARW,CAChB+B,OAAQ,QACRD,QAAS,eACTS,UAAW,OACXL,SAAU,OACVnB,QAAS,SAIR,wBAAIf,MAAO,CAAEuC,UAAW,WAAxB,SACA,wqBAOA,qmCAWA,wqBAOA,+lBCpBYC,EAhBA,WAUd,OACC,yBAAKxC,MAVY,CACjB8B,QAAS,cACTd,MAAO,OACPe,OAAQ,OACR3B,gBAAiB,UACjBM,MAAO,UACPyB,eAAgB,SAChBC,WAAY,WAIX,kFCuCYK,E,2MA3CbC,MAAQ,CACNC,aAAc,CAAC,OAAQ,MAAO,YAAa,aAAc,UAAW,eACpEC,YAAa,M,wEAIb,IAAIhB,EAQJ,OAPAA,EAAQiB,KAAKH,MAAMC,aAAaG,IAAI,SAAClB,EAAOmB,GAE1C,OADAC,QAAQC,IAAIrB,GAEV,kBAACsB,EAAD,CAAOC,IAAKJ,EAAOV,MAAOT,MAK5B,yBAAK1B,UAAU,OACb,6BACE,kBAACkD,EAAD,OAEF,6BACE,kBAACC,EAAD,OAEF,yBAAK1C,GAAG,QACN,kBAAC2C,EAAD,OAEF,yBAAK3C,GAAG,SACN,kBAAC4C,EAAD,OAEF,yBAAK5C,GAAG,SACN,yBAAKX,MAAO,CAAEwD,WAAY,OAAQzB,OAAQ,UAExC,wBAAI/B,MAAO,CAAEuC,UAAW,WAAxB,SACCX,IAGL,6BACE,kBAAC6B,EAAD,Y,GArCQC,aCGEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,gB","file":"static/js/main.bc8b65fb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst navbar = () => {\r\n const styleNavbar = {\r\n  marginBottom: '0',\r\n }\r\n const styleNavInverse = {\r\n  backgroundImage: 'none',\r\n  backgroundColor: '#002a5d',\r\n  borderColor: '#00315a',\r\n }\r\n const styleNavA = {\r\n  backgroundImage: 'linear-gradient(to bottom,#080808 0,#f52828 100%)',\r\n }\r\n return (\r\n  <nav style={styleNavbar} className=\"navbar navbar-inverse navbar-fixed-top\" style={styleNavInverse}>\r\n   <div className=\"container-fluid\">\r\n    <div className=\"navbar-header\">\r\n     <button type=\"button\" className=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#myNavbar\">\r\n      <span className=\"icon-bar\"></span>\r\n      <span className=\"icon-bar\"></span>\r\n      <span className=\"icon-bar\"></span>\r\n     </button>\r\n     <a className=\"navbar-brand\" href=\"#\" style={{ color: '#e8e8e8' }}>WebSiteName</a>\r\n    </div>\r\n    <div className=\"collapse navbar-collapse\" id=\"myNavbar\">\r\n     <ul className=\"nav navbar-nav\">\r\n      <li className=\"active\"><a href=\"#home\" style={styleNavA}>Home</a></li>\r\n      <li><a href=\"#about\" style={{ color: '#e8e8e8' }}>About</a></li>\r\n      <li><a href=\"#block\" style={{ color: '#e8e8e8' }}>Block</a></li>\r\n     </ul>\r\n     <ul className=\"nav navbar-nav navbar-right\">\r\n      <li><a href=\"#\"><span className=\"glyphicon glyphicon-user\"></span> Sign Up</a></li>\r\n      <li><a href=\"#\"><span className=\"glyphicon glyphicon-log-in\"></span> Login</a></li>\r\n     </ul>\r\n    </div>\r\n   </div>\r\n  </nav>\r\n )\r\n}\r\nexport default navbar;","import React from 'react';\r\n\r\nconst modal = () => {\r\n return (\r\n  <div class=\"container-fluid\" style={{ marginTop: '5rem', padding: '0' }}>\r\n\r\n   <a class=\"btn btn-info btn-lg\" data-toggle=\"modal\" data-target=\"#myModal\" style={{ width: '100%' }}>Open Modal</a>\r\n\r\n   <div class=\"modal fade\" id=\"myModal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n\r\n     <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n       <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n       <h4 class=\"modal-title\">Modal Header</h4>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n       <p>Some text in the modal.</p>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n       <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n      </div>\r\n     </div>\r\n\r\n    </div>\r\n   </div>\r\n\r\n  </div>\r\n );\r\n}\r\nexport default modal;","import React from 'react';\r\n\r\n\r\nconst slider = () => {\r\n    const styleCarouselInner = {\r\n        maxHeight: '100vh',\r\n    }\r\n    const styleImage = {\r\n        width: '100%',\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"container-fluid\" style={{ padding: '0' }}>\r\n                <div id=\"myCarousel\" className=\"carousel slide\" data-ride=\"carousel\">\r\n\r\n                    <ol className=\"carousel-indicators\">\r\n                        <li data-target=\"#myCarousel\" data-slide-to=\"0\" className=\"active\"></li>\r\n                        <li data-target=\"#myCarousel\" data-slide-to=\"1\"></li>\r\n                        <li data-target=\"#myCarousel\" data-slide-to=\"2\"></li>\r\n                    </ol>\r\n\r\n                    <div className=\"carousel-inner\" style={styleCarouselInner}>\r\n\r\n                        <div className=\"item active\">\r\n                            <img src='./Images/la.jpg' alt=\"Los Angeles\" style={styleImage} />\r\n                            <div className=\"carousel-caption\" style={{ top: '50rem' }}>\r\n                                <h3>Los Angeles</h3>\r\n                                <p>LA is always so much fun!</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"item\">\r\n                            <img src='./Images/chicago.jpg' alt=\"Chicago\" style={styleImage} />\r\n                            <div className=\"carousel-caption\" style={{ top: '50rem' }}>\r\n                                <h3>Chicago</h3>\r\n                                <p>Thank you, Chicago!</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"item\">\r\n                            <img src='./Images/ny.jpg' alt=\"New York\" style={styleImage} />\r\n                            <div className=\"carousel-caption\" style={{ top: '50rem' }}>\r\n                                <h3>New York</h3>\r\n                                <p>We love the Big Apple!</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                    <a className=\"left carousel-control\" href=\"#myCarousel\" data-slide=\"prev\">\r\n                        <span className=\"glyphicon glyphicon-chevron-left\"></span>\r\n                        <span className=\"sr-only\">Previous</span>\r\n                    </a>\r\n                    <a className=\"right carousel-control\" href=\"#myCarousel\" data-slide=\"next\">\r\n                        <span className=\"glyphicon glyphicon-chevron-right\"></span>\r\n                        <span className=\"sr-only\">Next</span>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default slider;","import React from 'react';\r\n\r\nconst block = (props) => {\r\n let styleBlockOption = {\r\n  display: 'inline-grid',\r\n  width: '367px',\r\n  height: '228px',\r\n  boxShadow: '2px 6px 12px 5px #eeeeee',\r\n  margin: '12px',\r\n  padding: '37px',\r\n  fontSize: '50px',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n }\r\n return (\r\n  <div style={styleBlockOption}>\r\n   <p>{props.value}</p>\r\n  </div>\r\n );\r\n}\r\nexport default block;","import React from 'react';\r\n\r\nconst about = () => {\r\n let styleAbout = {\r\n  height: '100vh',\r\n  display: 'inline-block',\r\n  textAlign: 'left',\r\n  fontSize: '17px',\r\n  padding: '45px',\r\n }\r\n return (\r\n  <div style={styleAbout}>\r\n   <h1 style={{ textAlign: 'center', }}>ABOUT</h1>\r\n   <p>React (also known as React.js or ReactJS) is a JavaScript library[3] for building user interfaces.\r\n    It is maintained by Facebook and a community of individual developers and companies.[4][5][6].\r\n    React can be used as a base in the development of single-page or mobile applications, as it is optimal\r\n     for fetching rapidly changing data that needs to be recorded. However, fetching data is only the\r\n      beginning of what happens on a web page, which is why complex React applications usually require\r\n      the use of additional libraries for state management, routing, and interaction with an API:[7][8]\r\n      Next.js[9] and Gatsby.js[10] are examples of such libraries.</p>\r\n   <p>Lifecycle methods are hooks that allow execution of code at set points during a component's lifetime.\r\n    shouldComponentUpdate allows the developer to prevent unnecessary re-rendering of a component by returning\r\n    false if a render is not required. componentDidMount is called once the component has \"mounted\"\r\n    (the component has been created in the user interface, often by associating it with a DOM node). This is\r\n    commonly used to trigger data loading from a remote source via an API. ComponentWillUnmount is called\r\n    immediately before the component is torn down or \"unmounted\". This is commonly used to clear resource\r\n    demanding dependencies to the component that will not simply be removed with the unmounting of the\r\n    component (e.g., removing any setInterval() instances that are related to the component, or an\r\n    \"eventListener\" set on the \"document\" because of the presence of the component) render is the most\r\n     important lifecycle method and the only required one in any component. It is usually called every time\r\n      the component's state is updated, which should be reflected in the user interface.</p>\r\n   <p>React (also known as React.js or ReactJS) is a JavaScript library[3] for building user interfaces.\r\n    It is maintained by Facebook and a community of individual developers and companies.[4][5][6].\r\n    React can be used as a base in the development of single-page or mobile applications, as it is optimal\r\n    for fetching rapidly changing data that needs to be recorded. However, fetching data is only the\r\n    beginning of what happens on a web page, which is why complex React applications usually require\r\n    the use of additional libraries for state management, routing, and interaction with an API:[7][8]\r\n     Next.js[9] and Gatsby.js[10] are examples of such libraries.</p>\r\n   <p>Lifecycle methods are hooks that allow execution of code at set points during a component's lifetime.\r\n     shouldComponentUpdate allows the developer to prevent unnecessary re-rendering of a component by returning\r\n     false if a render is not required. componentDidMount is called once the component has \"mounted\"\r\n     (the component has been created in the user interface, often by associating it with a DOM node). This is\r\n     commonly used to trigger data loading from a remote source via an API. ComponentWillUnmount is called\r\n     immediately before the component is torn down or \"unmounted\".</p>\r\n  </div>\r\n );\r\n}\r\nexport default about;","import React from 'react';\r\n\r\nconst footer = () => {\r\n const styleFoot = {\r\n  display: 'inline-grid',\r\n  width: '100%',\r\n  height: '10vh',\r\n  backgroundColor: '#232323',\r\n  color: '#ffffff',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n }\r\n return (\r\n  <div style={styleFoot}>\r\n   <p>© Copyright © 2019 AK. All Rights Reserved.</p>\r\n  </div>\r\n );\r\n}\r\nexport default footer;","import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './Component/Navbar/Navbar';\nimport Modal from './Component/Modal/Modal';\nimport Slider from './Component/Slider/Slider';\nimport Block from './Component/Block/Block';\nimport About from './Component/About/About';\nimport Footer from './Component/Footer/Footer';\n\nclass App extends Component {\n  state = {\n    blockHeading: ['HTML', 'CSS', 'BOOTSTRAP', 'JAVASCRIPT', 'REACTJS', 'REACTNATIVE'],\n    selectBlock: null,\n  }\n\n  render() {\n    let block = null;\n    block = this.state.blockHeading.map((block, index) => {\n      console.log(block)\n      return (\n        <Block key={index} value={block} />\n      );\n    })\n\n    return (\n      <div className=\"App\" >\n        <div>\n          <Navbar />\n        </div>\n        <div>\n          <Modal />\n        </div>\n        <div id='home'>\n          <Slider />\n        </div>\n        <div id='about'>\n          <About />\n        </div>\n        <div id='block'>\n          <div style={{ paddingTop: '4rem', height: '100vh' }}>\n            {/* <Block /> */}\n            <h1 style={{ textAlign: 'center' }}>BLOCK</h1>\n            {block}\n          </div>\n        </div>\n        <div>\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}